generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                                      String                        @id @default(uuid())
  username                                String                        @unique
  password                                String
  rol                                     RolUsuario
  nombre                                  String
  correo                                  String?                       @unique
  telefono                                String?
  activo                                  Boolean                       @default(true)
  punto_atencion_id                       String?
  created_at                              DateTime                      @default(now())
  updated_at                              DateTime                      @updatedAt
  abonosInicialesRecibidos                CambioDivisa[]                @relation("AbonoInicialRecibidoPor")
  cambios                                 CambioDivisa[]
  cierresDiariosRealizados                CierreDiario[]                @relation("UsuarioCerrador")
  cierresDiarios                          CierreDiario[]
  cuadresCierreParcial                    CuadreCaja[]                  @relation("UsuarioCierreParcial")
  cuadresCaja                             CuadreCaja[]
  historialAutorizados                    HistorialAsignacionPunto[]    @relation("UsuarioAutorizador")
  historialAsignaciones                   HistorialAsignacionPunto[]    @relation("UsuarioAsignacion")
  historialSaldos                         HistorialSaldo[]
  jornadas                                Jornada[]
  movimientos                             Movimiento[]
  movimientosSaldo                        MovimientoSaldo[]
  permisosAprobados                       Permiso[]                     @relation("UsuarioAprobadorPermiso")
  permisos                                Permiso[]
  recibos                                 Recibo[]
  saldosAsignados                         SaldoInicial[]                @relation("UsuarioAsignadorSaldo")
  salidasAprobadas                        SalidaEspontanea[]            @relation("UsuarioAprobadorSalida")
  salidasEspontaneas                      SalidaEspontanea[]
  servicioExternoAsignacionesAsignadas    ServicioExternoAsignacion[]
  servicioExternoCierresDiariosRealizados ServicioExternoCierreDiario[] @relation("UsuarioCerradorServiciosExternos")
  servicioExternoCierresDiarios           ServicioExternoCierreDiario[]
  servicioExternoMovimientos              ServicioExternoMovimiento[]
  solicitudes                             SolicitudSaldo[]
  transferenciasAprobadas                 Transferencia[]               @relation("UsuarioAprobador")
  transferenciasRechazadas                Transferencia[]               @relation("UsuarioRechazador")
  transferenciasSolicitadas               Transferencia[]               @relation("UsuarioSolicitante")
  guiasServientrega                       ServientregaGuia[]
  puntoAtencion                           PuntoAtencion?                @relation(fields: [punto_atencion_id], references: [id])

  @@index([username])
  @@index([punto_atencion_id])
}

model PuntoAtencion {
  id                              String                        @id @default(uuid())
  nombre                          String                        @unique
  direccion                       String
  ciudad                          String
  provincia                       String
  codigo_postal                   String?
  telefono                        String?
  servientrega_agencia_codigo     String?
  servientrega_agencia_nombre     String?
  servientrega_alianza            String?
  servientrega_oficina_alianza    String?
  activo                          Boolean                       @default(true)
  es_principal                    Boolean                       @default(false)
  created_at                      DateTime                      @default(now())
  updated_at                      DateTime                      @updatedAt
  cambios                         CambioDivisa[]
  cierresDiarios                  CierreDiario[]
  cuadresCaja                     CuadreCaja[]
  historialAsignacionesAnteriores HistorialAsignacionPunto[]    @relation("PuntoAnterior")
  historialAsignacionesNuevas     HistorialAsignacionPunto[]    @relation("PuntoNuevo")
  historialSaldos                 HistorialSaldo[]
  jornadas                        Jornada[]
  movimientos                     Movimiento[]
  movimientosSaldo                MovimientoSaldo[]
  permisos                        Permiso[]
  recibos                         Recibo[]
  saldos                          Saldo[]
  saldosIniciales                 SaldoInicial[]
  salidasEspontaneas              SalidaEspontanea[]
  servicioExternoAsignaciones     ServicioExternoAsignacion[]
  servicioExternoCierresDiarios   ServicioExternoCierreDiario[]
  servicioExternoMovimientos      ServicioExternoMovimiento[]
  servicioExternoSaldos           ServicioExternoSaldo[]
  guiasServientrega               ServientregaGuia[]
  historialSaldosServientrega     ServientregaHistorialSaldo[]
  saldosServientrega              ServientregaSaldo?
  solicitudesSaldoServientrega    ServientregaSolicitudSaldo[]
  solicitudes                     SolicitudSaldo[]
  transferenciasDestino           Transferencia[]               @relation("TransferenciasDestino")
  transferenciasOrigen            Transferencia[]               @relation("TransferenciasOrigen")
  usuarios                        Usuario[]

  @@index([ciudad])
  @@index([activo])
}

model Moneda {
  id                            String                         @id @default(uuid())
  nombre                        String
  simbolo                       String
  codigo                        String                         @unique
  activo                        Boolean                        @default(true)
  orden_display                 Int                            @default(0)
  comportamiento_compra         ComportamientoCalculo          @default(MULTIPLICA)
  comportamiento_venta          ComportamientoCalculo          @default(DIVIDE)
  created_at                    DateTime                       @default(now())
  updated_at                    DateTime                       @updatedAt
  cambiosDestino                CambioDivisa[]                 @relation("MonedaDestino")
  cambiosOrigen                 CambioDivisa[]                 @relation("MonedaOrigen")
  detallesCuadre                DetalleCuadreCaja[]
  historialSaldos               HistorialSaldo[]
  movimientos                   Movimiento[]
  movimientosSaldo              MovimientoSaldo[]
  saldos                        Saldo[]
  saldosIniciales               SaldoInicial[]
  servicioExternoAsignaciones   ServicioExternoAsignacion[]
  servicioExternoDetallesCierre ServicioExternoDetalleCierre[]
  servicioExternoMovimientos    ServicioExternoMovimiento[]
  servicioExternoSaldos         ServicioExternoSaldo[]
  solicitudes                   SolicitudSaldo[]
  transferencias                Transferencia[]

  @@index([codigo])
  @@index([activo])
  @@index([codigo], map: "idx_moneda_codigo")
}

model Saldo {
  id                String        @id @default(uuid())
  punto_atencion_id String
  moneda_id         String
  cantidad          Decimal       @default(0) @db.Decimal(15, 2)
  billetes          Decimal       @default(0) @db.Decimal(15, 2)
  monedas_fisicas   Decimal       @default(0) @db.Decimal(15, 2)
  updated_at        DateTime      @updatedAt
  bancos            Decimal       @default(0) @db.Decimal(15, 2)
  moneda            Moneda        @relation(fields: [moneda_id], references: [id], onDelete: Cascade)
  puntoAtencion     PuntoAtencion @relation(fields: [punto_atencion_id], references: [id], onDelete: Cascade)

  @@unique([punto_atencion_id, moneda_id])
  @@index([punto_atencion_id])
  @@index([moneda_id])
}

model SaldoInicial {
  id                String        @id @default(uuid())
  punto_atencion_id String
  moneda_id         String
  cantidad_inicial  Decimal       @default(0) @db.Decimal(15, 2)
  fecha_asignacion  DateTime      @default(now())
  asignado_por      String
  activo            Boolean       @default(true)
  observaciones     String?
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
  usuarioAsignador  Usuario       @relation("UsuarioAsignadorSaldo", fields: [asignado_por], references: [id])
  moneda            Moneda        @relation(fields: [moneda_id], references: [id], onDelete: Cascade)
  puntoAtencion     PuntoAtencion @relation(fields: [punto_atencion_id], references: [id], onDelete: Cascade)

  @@unique([punto_atencion_id, moneda_id, activo])
  @@index([punto_atencion_id])
  @@index([moneda_id])
  @@index([activo])
}

model MovimientoSaldo {
  id                String        @id @default(uuid())
  punto_atencion_id String
  moneda_id         String
  tipo_movimiento   String
  monto             Decimal       @db.Decimal(15, 2)
  saldo_anterior    Decimal       @db.Decimal(15, 2)
  saldo_nuevo       Decimal       @db.Decimal(15, 2)
  usuario_id        String
  referencia_id     String?
  tipo_referencia   String?
  descripcion       String?
  fecha             DateTime      @default(now())
  created_at        DateTime      @default(now())
  moneda            Moneda        @relation(fields: [moneda_id], references: [id], onDelete: Cascade)
  puntoAtencion     PuntoAtencion @relation(fields: [punto_atencion_id], references: [id], onDelete: Cascade)
  usuario           Usuario       @relation(fields: [usuario_id], references: [id])

  @@index([punto_atencion_id])
  @@index([moneda_id])
  @@index([fecha])
  @@index([referencia_id, tipo_referencia])
  @@index([moneda_id], map: "idx_movsaldo_moneda")
}

model HistorialSaldo {
  id                    String         @id @default(uuid())
  punto_atencion_id     String
  moneda_id             String
  usuario_id            String
  cantidad_anterior     Decimal        @db.Decimal(15, 2)
  cantidad_incrementada Decimal        @db.Decimal(15, 2)
  cantidad_nueva        Decimal        @db.Decimal(15, 2)
  tipo_movimiento       TipoMovimiento
  fecha                 DateTime       @default(now())
  descripcion           String?
  numero_referencia     String?
  moneda                Moneda         @relation(fields: [moneda_id], references: [id], onDelete: Cascade)
  puntoAtencion         PuntoAtencion  @relation(fields: [punto_atencion_id], references: [id], onDelete: Cascade)
  usuario               Usuario        @relation(fields: [usuario_id], references: [id], onDelete: Cascade)

  @@index([punto_atencion_id])
  @@index([fecha])
  @@index([tipo_movimiento])
}

model CambioDivisa {
  id                             String            @id @default(uuid())
  fecha                          DateTime          @default(now())
  monto_origen                   Decimal           @db.Decimal(15, 2)
  monto_destino                  Decimal           @db.Decimal(15, 2)
  tasa_cambio_billetes           Decimal           @default(0) @db.Decimal(10, 6)
  tasa_cambio_monedas            Decimal           @default(0) @db.Decimal(10, 6)
  divisas_entregadas_billetes    Decimal           @default(0) @db.Decimal(15, 2)
  divisas_entregadas_monedas     Decimal           @default(0) @db.Decimal(15, 2)
  divisas_entregadas_total       Decimal           @default(0) @db.Decimal(15, 2)
  divisas_recibidas_billetes     Decimal           @default(0) @db.Decimal(15, 2)
  divisas_recibidas_monedas      Decimal           @default(0) @db.Decimal(15, 2)
  divisas_recibidas_total        Decimal           @default(0) @db.Decimal(15, 2)
  tipo_operacion                 TipoOperacion
  moneda_origen_id               String
  moneda_destino_id              String
  usuario_id                     String
  punto_atencion_id              String
  observacion                    String?
  numero_recibo                  String?           @unique
  estado                         EstadoTransaccion @default(COMPLETADO)
  metodo_entrega                 String
  transferencia_numero           String?
  transferencia_banco            String?
  transferencia_imagen_url       String?
  abono_inicial_monto            Decimal?          @db.Decimal(15, 2)
  abono_inicial_fecha            DateTime?
  abono_inicial_recibido_por     String?
  saldo_pendiente                Decimal?          @db.Decimal(15, 2)
  fecha_compromiso               DateTime?
  observacion_parcial            String?
  referencia_cambio_principal    String?
  cliente                        String?
  numero_recibo_abono            String?           @unique
  numero_recibo_completar        String?           @unique
  fecha_completado               DateTime?
  // DESTINO (ya existente)
  usd_entregado_efectivo         Decimal?          @db.Decimal(15, 2)
  usd_entregado_transfer         Decimal?          @db.Decimal(15, 2)
  // ORIGEN (NUEVO): cómo paga el cliente
  metodo_pago_origen             TipoViaTransferencia @default(EFECTIVO)
  usd_recibido_efectivo          Decimal?             @db.Decimal(15, 2)
  usd_recibido_transfer          Decimal?             @db.Decimal(15, 2)

  abonoInicialRecibidoPorUsuario Usuario?          @relation("AbonoInicialRecibidoPor", fields: [abono_inicial_recibido_por], references: [id])
  monedaDestino                  Moneda            @relation("MonedaDestino", fields: [moneda_destino_id], references: [id])
  monedaOrigen                   Moneda            @relation("MonedaOrigen", fields: [moneda_origen_id], references: [id])
  puntoAtencion                  PuntoAtencion     @relation(fields: [punto_atencion_id], references: [id])
  usuario                        Usuario           @relation(fields: [usuario_id], references: [id])

  @@index([fecha])
  @@index([punto_atencion_id])
  @@index([usuario_id])
}

model Transferencia {
  id                       String              @id @default(uuid())
  origen_id                String?
  destino_id               String
  moneda_id                String
  monto                    Decimal             @db.Decimal(15, 2)
  tipo_transferencia       TipoTransferencia
  estado                   EstadoTransferencia @default(PENDIENTE)
  solicitado_por           String
  aprobado_por             String?
  rechazado_por            String?
  fecha                    DateTime            @default(now())
  fecha_aprobacion         DateTime?
  fecha_rechazo            DateTime?
  descripcion              String?
  numero_recibo            String?             @unique
  via                      TipoViaTransferencia?
  observaciones_aprobacion String?
  usuarioAprobador         Usuario?            @relation("UsuarioAprobador", fields: [aprobado_por], references: [id])
  destino                  PuntoAtencion       @relation("TransferenciasDestino", fields: [destino_id], references: [id])
  moneda                   Moneda              @relation(fields: [moneda_id], references: [id])
  origen                   PuntoAtencion?      @relation("TransferenciasOrigen", fields: [origen_id], references: [id])
  usuarioRechazador        Usuario?            @relation("UsuarioRechazador", fields: [rechazado_por], references: [id])
  usuarioSolicitante       Usuario             @relation("UsuarioSolicitante", fields: [solicitado_por], references: [id])

  @@index([fecha])
  @@index([estado])
  @@index([destino_id])
}

model Movimiento {
  id                String         @id @default(uuid())
  tipo              TipoMovimiento
  monto             Decimal        @db.Decimal(15, 2)
  moneda_id         String
  usuario_id        String
  punto_atencion_id String
  fecha             DateTime       @default(now())
  descripcion       String?
  numero_recibo     String?        @unique
  moneda            Moneda         @relation(fields: [moneda_id], references: [id])
  puntoAtencion     PuntoAtencion  @relation(fields: [punto_atencion_id], references: [id])
  usuario           Usuario        @relation(fields: [usuario_id], references: [id])

  @@index([fecha])
  @@index([punto_atencion_id])
}

model Recibo {
  id                String        @id @default(uuid())
  numero_recibo     String        @unique
  tipo_operacion    TipoRecibo
  referencia_id     String
  usuario_id        String
  punto_atencion_id String
  fecha             DateTime      @default(now())
  datos_operacion   Json
  impreso           Boolean       @default(false)
  numero_copias     Int           @default(2)
  puntoAtencion     PuntoAtencion @relation(fields: [punto_atencion_id], references: [id])
  usuario           Usuario       @relation(fields: [usuario_id], references: [id])

  @@index([fecha])
  @@index([numero_recibo])
  @@index([tipo_operacion])
}

model SolicitudSaldo {
  id                String        @id @default(uuid())
  punto_atencion_id String
  usuario_id        String
  moneda_id         String
  monto_solicitado  Decimal       @db.Decimal(15, 2)
  aprobado          Boolean       @default(false)
  fecha_solicitud   DateTime      @default(now())
  fecha_respuesta   DateTime?
  observaciones     String?
  moneda            Moneda        @relation(fields: [moneda_id], references: [id], onDelete: Cascade)
  puntoAtencion     PuntoAtencion @relation(fields: [punto_atencion_id], references: [id], onDelete: Cascade)
  usuario           Usuario       @relation(fields: [usuario_id], references: [id], onDelete: Cascade)

  @@index([fecha_solicitud])
  @@index([aprobado])
}

model Jornada {
  id                String        @id @default(uuid())
  usuario_id        String
  punto_atencion_id String
  fecha_inicio      DateTime      @default(now())
  fecha_almuerzo    DateTime?
  fecha_regreso     DateTime?
  fecha_salida      DateTime?
  ubicacion_inicio  Json?
  ubicacion_salida  Json?
  estado            EstadoJornada @default(ACTIVO)
  motivo_cambio     String?
  usuario_autorizo  String?
  observaciones     String?
  puntoAtencion     PuntoAtencion @relation(fields: [punto_atencion_id], references: [id], onDelete: Cascade)
  usuario           Usuario       @relation(fields: [usuario_id], references: [id], onDelete: Cascade)

  @@index([usuario_id])
  @@index([fecha_inicio])
  @@index([punto_atencion_id])
}

model SalidaEspontanea {
  id                String        @id @default(uuid())
  usuario_id        String
  punto_atencion_id String
  motivo            MotivoSalida
  descripcion       String?
  fecha_salida      DateTime      @default(now())
  fecha_regreso     DateTime?
  ubicacion_salida  Json?
  ubicacion_regreso Json?
  duracion_minutos  Int?
  aprobado_por      String?
  estado            EstadoSalida  @default(ACTIVO)
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
  usuarioAprobador  Usuario?      @relation("UsuarioAprobadorSalida", fields: [aprobado_por], references: [id])
  puntoAtencion     PuntoAtencion @relation(fields: [punto_atencion_id], references: [id], onDelete: Cascade)
  usuario           Usuario       @relation(fields: [usuario_id], references: [id], onDelete: Cascade)

  @@index([usuario_id])
  @@index([punto_atencion_id])
  @@index([fecha_salida])
  @@index([estado])
}

model CuadreCaja {
  id                           String              @id @default(uuid())
  usuario_id                   String
  punto_atencion_id            String
  fecha                        DateTime            @default(now())
  estado                       EstadoCierre        @default(ABIERTO)
  total_cambios                Int                 @default(0)
  total_transferencias_entrada Int                 @default(0)
  total_transferencias_salida  Int                 @default(0)
  fecha_cierre                 DateTime?
  observaciones                String?
  saldo_inicial_calculado      Boolean             @default(false)
  total_ingresos               Decimal             @default(0) @db.Decimal(15, 2)
  total_egresos                Decimal             @default(0) @db.Decimal(15, 2)
  usuario_cierre_parcial       String?
  puntoAtencion                PuntoAtencion       @relation(fields: [punto_atencion_id], references: [id])
  usuarioCierreParcial         Usuario?            @relation("UsuarioCierreParcial", fields: [usuario_cierre_parcial], references: [id])
  usuario                      Usuario             @relation(fields: [usuario_id], references: [id])
  detalles                     DetalleCuadreCaja[]

  @@index([fecha])
  @@index([punto_atencion_id])
  @@index([estado])
}

model DetalleCuadreCaja {
  id                    String     @id @default(uuid())
  cuadre_id             String
  moneda_id             String
  saldo_apertura        Decimal    @db.Decimal(15, 2)
  saldo_cierre          Decimal    @db.Decimal(15, 2)
  conteo_fisico         Decimal    @db.Decimal(15, 2)
  billetes              Int        @default(0)
  monedas_fisicas       Int        @default(0)
  diferencia            Decimal    @default(0) @db.Decimal(15, 2)
  movimientos_periodo   Int        @default(0)
  observaciones_detalle String?
  cuadre                CuadreCaja @relation(fields: [cuadre_id], references: [id], onDelete: Cascade)
  moneda                Moneda     @relation(fields: [moneda_id], references: [id])

  @@unique([cuadre_id, moneda_id])
  @@index([moneda_id])
}

model HistorialAsignacionPunto {
  id                         String         @id @default(uuid())
  usuario_id                 String
  punto_atencion_anterior_id String?
  punto_atencion_nuevo_id    String
  fecha_asignacion           DateTime       @default(now())
  motivo_cambio              String?
  autorizado_por             String?
  tipo_asignacion            String         @default("MANUAL")
  observaciones              String?
  created_at                 DateTime       @default(now())
  usuarioAutorizador         Usuario?       @relation("UsuarioAutorizador", fields: [autorizado_por], references: [id])
  puntoAnterior              PuntoAtencion? @relation("PuntoAnterior", fields: [punto_atencion_anterior_id], references: [id])
  puntoNuevo                 PuntoAtencion  @relation("PuntoNuevo", fields: [punto_atencion_nuevo_id], references: [id])
  usuario                    Usuario        @relation("UsuarioAsignacion", fields: [usuario_id], references: [id], onDelete: Cascade)

  @@index([usuario_id, fecha_asignacion])
  @@index([punto_atencion_nuevo_id, fecha_asignacion])
  @@index([tipo_asignacion, fecha_asignacion])
}

model ServientregaRemitente {
  id            String             @id @default(uuid())
  cedula        String             @unique
  nombre        String
  direccion     String
  telefono      String
  codigo_postal String?
  email         String?
  guias         ServientregaGuia[]
}

model ServientregaHistorialSaldo {
  id                    String        @id @default(uuid())
  punto_atencion_id     String
  punto_atencion_nombre String
  monto_total           Decimal       @db.Decimal(15, 2)
  creado_por            String
  creado_en             DateTime      @default(now())
  punto_atencion        PuntoAtencion @relation(fields: [punto_atencion_id], references: [id], onDelete: Cascade)
}

model ServientregaSolicitudSaldo {
  id                    String        @id @default(uuid())
  punto_atencion_id     String
  punto_atencion_nombre String
  monto_requerido       Decimal       @db.Decimal(15, 2)
  estado                String        @default("PENDIENTE")
  observaciones         String?
  creado_en             DateTime      @default(now())
  aprobado_por          String?
  aprobado_en           DateTime?
  punto_atencion        PuntoAtencion @relation(fields: [punto_atencion_id], references: [id], onDelete: Cascade)
}

model ServientregaDestinatario {
  id            String             @id @default(uuid())
  cedula        String             @unique
  nombre        String
  direccion     String
  ciudad        String
  provincia     String?
  pais          String
  telefono      String
  email         String?
  codigo_postal String?
  guias         ServientregaGuia[]
}

model ServientregaGuia {
  id                String                   @id @default(uuid())
  numero_guia       String                   @unique
  proceso           String
  estado            String                   @default("ACTIVA") // ACTIVA, ANULADA, PENDIENTE_ANULACION
  base64_response   String?
  remitente_id      String?
  destinatario_id   String?
  punto_atencion_id String?
  usuario_id        String?
  valor_declarado   Decimal?                 @default(0) @db.Decimal(15, 2)
  costo_envio       Decimal?                 @default(0) @db.Decimal(15, 2)
  created_at        DateTime                 @default(now())
  updated_at        DateTime                 @updatedAt
  destinatario      ServientregaDestinatario? @relation(fields: [destinatario_id], references: [id])
  punto_atencion    PuntoAtencion?           @relation(fields: [punto_atencion_id], references: [id])
  usuario           Usuario?                 @relation(fields: [usuario_id], references: [id])
  remitente         ServientregaRemitente?    @relation(fields: [remitente_id], references: [id])

  @@index([numero_guia])
  @@index([punto_atencion_id])
  @@index([usuario_id])
  @@index([usuario_id, punto_atencion_id])
  @@index([proceso])
  @@index([estado])
}

model ServientregaSaldo {
  id                String        @id @default(uuid())
  monto_total       Decimal       @db.Decimal(15, 2)
  monto_usado       Decimal       @default(0) @db.Decimal(15, 2)
  creado_por        String
  punto_atencion_id String        @unique
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
  punto_atencion    PuntoAtencion @relation(fields: [punto_atencion_id], references: [id])
}

model ServientregaSolicitudAnulacion {
  id                      String    @id @default(uuid())
  guia_id                 String
  numero_guia             String
  motivo_anulacion        String
  estado                  String    @default("PENDIENTE")
  solicitado_por          String
  solicitado_por_nombre   String
  fecha_solicitud         DateTime  @default(now())
  respondido_por          String?
  respondido_por_nombre   String?
  observaciones_respuesta String?
  fecha_respuesta         DateTime?

  @@index([numero_guia])
  @@index([estado])
  @@index([fecha_solicitud])
}

model CierreDiario {
  id                     String        @id @default(uuid())
  fecha                  DateTime      @db.Date
  punto_atencion_id      String
  usuario_id             String
  observaciones          String?
  estado                 String        @default("ABIERTO")
  fecha_cierre           DateTime?
  cerrado_por            String?
  diferencias_reportadas Json?
  created_at             DateTime      @default(now())
  updated_at             DateTime      @updatedAt
  usuarioCerrador        Usuario?      @relation("UsuarioCerrador", fields: [cerrado_por], references: [id], onDelete: Restrict)
  puntoAtencion          PuntoAtencion @relation(fields: [punto_atencion_id], references: [id], onDelete: Cascade)
  usuario                Usuario       @relation(fields: [usuario_id], references: [id])

  @@unique([fecha, punto_atencion_id])
  @@index([fecha])
  @@index([punto_atencion_id])
  @@index([estado])
  @@index([fecha, punto_atencion_id])
}

model ServicioExternoMovimiento {
  id                String          @id @default(uuid())
  punto_atencion_id String
  servicio          ServicioExterno
  tipo_movimiento   TipoMovimiento
  moneda_id         String
  monto             Decimal         @db.Decimal(15, 2)
  usuario_id        String
  fecha             DateTime        @default(now())
  descripcion       String?
  numero_referencia String?
  comprobante_url   String?
  moneda            Moneda          @relation(fields: [moneda_id], references: [id], onDelete: Cascade)
  puntoAtencion     PuntoAtencion   @relation(fields: [punto_atencion_id], references: [id], onDelete: Cascade)
  usuario           Usuario         @relation(fields: [usuario_id], references: [id])

  @@index([punto_atencion_id])
  @@index([fecha])
  @@index([servicio])
  @@index([moneda_id])
}

model ServicioExternoSaldo {
  id                String          @id @default(uuid())
  punto_atencion_id String
  servicio          ServicioExterno
  moneda_id         String
  cantidad          Decimal         @default(0) @db.Decimal(15, 2)
  updated_at        DateTime        @updatedAt
  moneda            Moneda          @relation(fields: [moneda_id], references: [id], onDelete: Cascade)
  puntoAtencion     PuntoAtencion   @relation(fields: [punto_atencion_id], references: [id], onDelete: Cascade)

  @@unique([punto_atencion_id, servicio, moneda_id])
  @@index([punto_atencion_id])
  @@index([servicio])
}

model ServicioExternoAsignacion {
  id                String                 @id @default(uuid())
  punto_atencion_id String
  servicio          ServicioExterno
  moneda_id         String
  monto             Decimal                @db.Decimal(15, 2)
  tipo              TipoAsignacionServicio
  observaciones     String?
  asignado_por      String
  fecha             DateTime               @default(now())
  usuarioAsignador  Usuario                @relation(fields: [asignado_por], references: [id])
  moneda            Moneda                 @relation(fields: [moneda_id], references: [id], onDelete: Cascade)
  puntoAtencion     PuntoAtencion          @relation(fields: [punto_atencion_id], references: [id], onDelete: Cascade)

  @@index([punto_atencion_id])
  @@index([servicio])
  @@index([tipo])
}

model ServicioExternoCierreDiario {
  id                     String                         @id @default(uuid())
  fecha                  DateTime                       @db.Date
  punto_atencion_id      String
  usuario_id             String
  observaciones          String?
  estado                 String                         @default("ABIERTO")
  fecha_cierre           DateTime?
  cerrado_por            String?
  diferencias_reportadas Json?
  created_at             DateTime                       @default(now())
  updated_at             DateTime                       @updatedAt
  usuarioCerrador        Usuario?                       @relation("UsuarioCerradorServiciosExternos", fields: [cerrado_por], references: [id], onDelete: Restrict)
  puntoAtencion          PuntoAtencion                  @relation(fields: [punto_atencion_id], references: [id], onDelete: Cascade)
  usuario                Usuario                        @relation(fields: [usuario_id], references: [id])
  detalles               ServicioExternoDetalleCierre[]

  @@unique([fecha, punto_atencion_id])
  @@index([fecha])
  @@index([punto_atencion_id])
  @@index([estado])
}

model ServicioExternoDetalleCierre {
  id                String                      @id @default(uuid())
  cierre_id         String
  servicio          ServicioExterno
  moneda_id         String
  monto_movimientos Decimal                     @default(0) @db.Decimal(15, 2)
  monto_validado    Decimal                     @default(0) @db.Decimal(15, 2)
  diferencia        Decimal                     @default(0) @db.Decimal(15, 2)
  observaciones     String?
  cierre            ServicioExternoCierreDiario @relation(fields: [cierre_id], references: [id], onDelete: Cascade)
  moneda            Moneda                      @relation(fields: [moneda_id], references: [id], onDelete: Cascade)

  @@index([cierre_id])
  @@index([servicio])
}

model Permiso {
  id                String         @id @default(uuid())
  usuario_id        String
  punto_atencion_id String?
  tipo              PermisoTipo
  fecha_inicio      DateTime
  fecha_fin         DateTime
  descripcion       String?
  archivo_url       String?
  archivo_nombre    String?
  estado            EstadoPermiso  @default(PENDIENTE)
  aprobado_por      String?
  fecha_aprobacion  DateTime?
  created_at        DateTime       @default(now())
  updated_at        DateTime       @updatedAt
  aprobador         Usuario?       @relation("UsuarioAprobadorPermiso", fields: [aprobado_por], references: [id])
  puntoAtencion     PuntoAtencion? @relation(fields: [punto_atencion_id], references: [id])
  usuario           Usuario        @relation(fields: [usuario_id], references: [id], onDelete: Cascade)

  @@index([usuario_id])
  @@index([estado])
  @@index([fecha_inicio])
}

enum TipoAsignacionServicio {
  INICIAL
  RECARGA
}

enum ServicioExterno {
  YAGANASTE
  BANCO_GUAYAQUIL
  WESTERN
  PRODUBANCO
  BANCO_PACIFICO
  INSUMOS_OFICINA
  INSUMOS_LIMPIEZA
  SERVIENTREGA
  OTROS
}

enum RolUsuario {
  SUPER_USUARIO
  ADMIN
  OPERADOR
  CONCESION
  ADMINISTRATIVO
}

enum TipoMovimiento {
  INGRESO
  EGRESO
  TRANSFERENCIA_ENTRANTE
  TRANSFERENCIA_SALIENTE
  CAMBIO_DIVISA
}

enum TipoOperacion {
  COMPRA
  VENTA
}

enum ComportamientoCalculo {
  MULTIPLICA
  DIVIDE
}

enum TipoTransferencia {
  ENTRE_PUNTOS
  DEPOSITO_MATRIZ
  RETIRO_GERENCIA
  DEPOSITO_GERENCIA
}

enum TipoViaTransferencia {
  EFECTIVO
  BANCO
  MIXTO
}

enum EstadoTransferencia {
  PENDIENTE
  APROBADO
  RECHAZADO
}

enum EstadoTransaccion {
  COMPLETADO
  PENDIENTE
  CANCELADO
}

enum EstadoCierre {
  ABIERTO
  CERRADO
  PARCIAL
}

enum TipoRecibo {
  CAMBIO_DIVISA
  TRANSFERENCIA
  MOVIMIENTO
  DEPOSITO
  RETIRO
  SERVIENTREGA
}

enum EstadoJornada {
  ACTIVO
  ALMUERZO
  COMPLETADO
  CANCELADO
}

enum MotivoSalida {
  BANCO
  DILIGENCIA_PERSONAL
  TRAMITE_GOBIERNO
  EMERGENCIA_MEDICA
  OTRO
}

enum EstadoSalida {
  ACTIVO
  COMPLETADO
  CANCELADO
}

enum PermisoTipo {
  PERSONAL
  SALUD
  OFICIAL
  OTRO
}

enum EstadoPermiso {
  PENDIENTE
  APROBADO
  RECHAZADO
}
